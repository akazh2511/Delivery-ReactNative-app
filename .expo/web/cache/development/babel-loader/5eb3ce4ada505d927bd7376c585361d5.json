{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport RNStyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport Currency from 'react-currency-formatter';\nimport { urlFor } from \"../sanity\";\nimport { MinusCircleIcon, PlusCircleIcon } from 'react-native-heroicons/outline';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { addtobasket } from \"../features/basketSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar DishRow = function DishRow(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      description = _ref.description,\n      price = _ref.price,\n      image = _ref.image;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPressed = _useState2[0],\n      setisPressed = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var addItemToBasket = function addItemToBasket() {\n    dispatch(addtobasket({\n      id: id,\n      name: name,\n      description: description,\n      price: price,\n      image: image\n    }));\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StyledComponent, {\n      onPress: function onPress() {\n        return setisPressed(!isPressed);\n      },\n      className: \"bg-white border p-4 border-gray-200 \" + (isPressed && \"border-b-0\"),\n      component: TouchableOpacity,\n      children: _jsxs(StyledComponent, {\n        className: \"flex-row\",\n        component: View,\n        children: [_jsxs(StyledComponent, {\n          className: \"flex-1 pr-2\",\n          component: View,\n          children: [_jsx(StyledComponent, {\n            className: \"text-lg mb-1\",\n            component: Text,\n            children: name\n          }), _jsx(StyledComponent, {\n            className: \"text-gray-400\",\n            component: Text,\n            children: description\n          }), _jsx(StyledComponent, {\n            className: \"text-gray-400 mt-2\",\n            component: Text,\n            children: _jsx(Currency, {\n              quantity: price,\n              currency: \"GBP\"\n            })\n          })]\n        }), _jsx(View, {\n          children: _jsx(StyledComponent, {\n            style: {\n              borderWidth: 1,\n              borderColor: \"#F3F3F4\"\n            },\n            source: {\n              uri: urlFor(image).url()\n            },\n            className: \"h-20 w-20 bg-gray-300 p-4\",\n            component: Image\n          })\n        })]\n      })\n    }), isPressed && _jsx(StyledComponent, {\n      className: \"bg-white px-4\",\n      component: View,\n      children: _jsxs(StyledComponent, {\n        className: \"flex-row items-center space-x-2 pb-3\",\n        component: View,\n        children: [_jsx(TouchableOpacity, {\n          children: _jsx(MinusCircleIcon, {\n            size: 40,\n            color: \"#00CCBB\"\n          })\n        }), _jsx(Text, {\n          children: items.length\n        }), _jsx(TouchableOpacity, {\n          onPress: addItemToBasket,\n          children: _jsx(PlusCircleIcon, {\n            size: 40,\n            color: \"#00CCBB\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default DishRow;\nglobalThis.tailwindcss_react_native_style = _extends(globalThis.tailwindcss_react_native_style || {}, RNStyleSheet.create({\n  \"mb-1\": {\n    \"marginBottom\": 4\n  },\n  \"mt-2\": {\n    \"marginTop\": 8\n  },\n  \"h-20\": {\n    \"height\": 80\n  },\n  \"w-20\": {\n    \"width\": 80\n  },\n  \"flex-1\": {\n    \"flexGrow\": 1,\n    \"flexShrink\": 1\n  },\n  \"flex-row\": {\n    \"flexDirection\": \"row\"\n  },\n  \"items-center\": {\n    \"alignItems\": \"center\"\n  },\n  \"border\": {\n    \"borderTopWidth\": RNStyleSheet.hairlineWidth,\n    \"borderRightWidth\": RNStyleSheet.hairlineWidth,\n    \"borderBottomWidth\": RNStyleSheet.hairlineWidth,\n    \"borderLeftWidth\": RNStyleSheet.hairlineWidth\n  },\n  \"border-b-0\": {\n    \"borderBottomWidth\": 0\n  },\n  \"border-gray-200\": {\n    \"borderTopColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderRightColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderBottomColor\": \"rgba(229, 231, 235, 1)\",\n    \"borderLeftColor\": \"rgba(229, 231, 235, 1)\"\n  },\n  \"bg-white\": {\n    \"backgroundColor\": \"rgba(255, 255, 255, 1)\"\n  },\n  \"bg-gray-300\": {\n    \"backgroundColor\": \"rgba(209, 213, 219, 1)\"\n  },\n  \"p-4\": {\n    \"paddingTop\": 16,\n    \"paddingRight\": 16,\n    \"paddingBottom\": 16,\n    \"paddingLeft\": 16\n  },\n  \"px-4\": {\n    \"paddingLeft\": 16,\n    \"paddingRight\": 16\n  },\n  \"pr-2\": {\n    \"paddingRight\": 8\n  },\n  \"pb-3\": {\n    \"paddingBottom\": 12\n  },\n  \"text-gray-400\": {\n    \"color\": \"#9ca3af\"\n  },\n  \"space-x-2.0\": {\n    \"marginLeft\": 8\n  },\n  \"text-lg\": {\n    \"fontSize\": 18,\n    \"lineHeight\": 28\n  }\n}));\nglobalThis.tailwindcss_react_native_media = _extends(globalThis.tailwindcss_react_native_media || {}, {\n  \"space-x-2\": [[[\"selector\", \"(> *:not(:first-child))\"]]]\n});","map":{"version":3,"names":["React","useState","Currency","urlFor","MinusCircleIcon","PlusCircleIcon","useDispatch","addtobasket","DishRow","id","name","description","price","image","isPressed","setisPressed","dispatch","addItemToBasket","borderWidth","borderColor","uri","url","items","length"],"sources":["C:/Users/akash/Downloads/Projects/React-native/delivery/components/DishRow.js"],"sourcesContent":["import { View, Text, TouchableOpacity,Image } from 'react-native'\r\nimport React ,{useState} from 'react'\r\nimport Currency from 'react-currency-formatter'\r\nimport { urlFor } from '../sanity'\r\nimport { MinusCircleIcon, PlusCircleIcon } from 'react-native-heroicons/outline'\r\nimport { useDispatch } from 'react-redux/es/exports'\r\nimport { addtobasket } from '../features/basketSlice'\r\nconst DishRow = ({id, name, description, price , image}) => {\r\n  const [isPressed, setisPressed] = useState(false);\r\n  const dispatch=useDispatch();\r\n  const addItemToBasket=()=>{\r\n          dispatch(addtobasket({id, name, description, price , image}))\r\n  }\r\n  return (\r\n    <>\r\n    <TouchableOpacity  onPress={()=>setisPressed(!isPressed)} className={`bg-white border p-4 border-gray-200 ${isPressed && \"border-b-0\"}`}>\r\n      <View className=\"flex-row\">\r\n      <View className=\"flex-1 pr-2\">\r\n        <Text className=\"text-lg mb-1\">\r\n          {name}\r\n        </Text>\r\n        <Text className=\"text-gray-400\">\r\n          {description}\r\n        </Text>\r\n        <Text className=\"text-gray-400 mt-2\">\r\n            <Currency quantity={price} currency=\"GBP\" />\r\n        </Text>\r\n      </View>\r\n      <View>\r\n        <Image\r\n        style={{\r\n          borderWidth:1,\r\n          borderColor:\"#F3F3F4\"\r\n        }}\r\n         source={{uri: urlFor(image).url()}}\r\n        className=\"h-20 w-20 bg-gray-300 p-4\"/>\r\n      </View>\r\n      </View> \r\n    </TouchableOpacity>\r\n    \r\n    \r\n\r\n     {isPressed && (\r\n        <View className=\"bg-white px-4\">\r\n          <View className=\"flex-row items-center space-x-2 pb-3\">\r\n            <TouchableOpacity><MinusCircleIcon size={40} color=\"#00CCBB\"/></TouchableOpacity>\r\n            <Text>{items.length}</Text>\r\n            <TouchableOpacity onPress={addItemToBasket}><PlusCircleIcon size={40} color=\"#00CCBB\"/></TouchableOpacity>\r\n          </View>\r\n        </View>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DishRow"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,MAAT;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,gCAAhD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT;;;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4C;EAAA,IAA1CC,EAA0C,QAA1CA,EAA0C;EAAA,IAAtCC,IAAsC,QAAtCA,IAAsC;EAAA,IAAhCC,WAAgC,QAAhCA,WAAgC;EAAA,IAAnBC,KAAmB,QAAnBA,KAAmB;EAAA,IAAXC,KAAW,QAAXA,KAAW;;EAC1D,gBAAkCZ,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOa,SAAP;EAAA,IAAkBC,YAAlB;;EACA,IAAMC,QAAQ,GAACV,WAAW,EAA1B;;EACA,IAAMW,eAAe,GAAC,SAAhBA,eAAgB,GAAI;IAClBD,QAAQ,CAACT,WAAW,CAAC;MAACE,EAAE,EAAFA,EAAD;MAAKC,IAAI,EAAJA,IAAL;MAAWC,WAAW,EAAXA,WAAX;MAAwBC,KAAK,EAALA,KAAxB;MAAgCC,KAAK,EAALA;IAAhC,CAAD,CAAZ,CAAR;EACP,CAFD;;EAGA,OACE;IAAA,WACA;MAAmB,OAAO,EAAE;QAAA,OAAIE,YAAY,CAAC,CAACD,SAAF,CAAhB;MAAA,CAA5B;MAA0D,SAAS,4CAAyCA,SAAS,IAAI,YAAtD,CAAnE;MAAA;MAAA,UACE;QAAM,SAAS,EAAC,UAAhB;QAAA;QAAA,WACA;UAAM,SAAS,EAAC,aAAhB;UAAA;UAAA,WACE;YAAM,SAAS,EAAC,cAAhB;YAAA;YAAA,UACGJ;UADH,EADF,EAIE;YAAM,SAAS,EAAC,eAAhB;YAAA;YAAA,UACGC;UADH,EAJF,EAOE;YAAM,SAAS,EAAC,oBAAhB;YAAA;YAAA,UACI,KAAC,QAAD;cAAU,QAAQ,EAAEC,KAApB;cAA2B,QAAQ,EAAC;YAApC;UADJ,EAPF;QAAA,EADA,EAYA,KAAC,IAAD;UAAA,UACE;YACA,KAAK,EAAE;cACLM,WAAW,EAAC,CADP;cAELC,WAAW,EAAC;YAFP,CADP;YAKC,MAAM,EAAE;cAACC,GAAG,EAAEjB,MAAM,CAACU,KAAD,CAAN,CAAcQ,GAAd;YAAN,CALT;YAMA,SAAS,EAAC,2BANV;YAAA;UAAA;QADF,EAZA;MAAA;IADF,EADA,EA4BEP,SAAS,IACP;MAAM,SAAS,EAAC,eAAhB;MAAA;MAAA,UACE;QAAM,SAAS,EAAC,sCAAhB;QAAA;QAAA,WACE,KAAC,gBAAD;UAAA,UAAkB,KAAC,eAAD;YAAiB,IAAI,EAAE,EAAvB;YAA2B,KAAK,EAAC;UAAjC;QAAlB,EADF,EAEE,KAAC,IAAD;UAAA,UAAOQ,KAAK,CAACC;QAAb,EAFF,EAGE,KAAC,gBAAD;UAAkB,OAAO,EAAEN,eAA3B;UAAA,UAA4C,KAAC,cAAD;YAAgB,IAAI,EAAE,EAAtB;YAA0B,KAAK,EAAC;UAAhC;QAA5C,EAHF;MAAA;IADF,EA7BJ;EAAA,EADF;AAwCD,CA9CD;;AAgDA,eAAeT,OAAf"},"metadata":{},"sourceType":"module"}